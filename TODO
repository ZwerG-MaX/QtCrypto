* Additional unit tests
* Bundle root certificates to be used on platforms without a system store
  (we need to choose a reliable source, maybe mozilla or debian?)

* API documentation
  clean up Algorithm
  clean up Filter
  add QCA::systemStore() and haveSystemStore()

* Considerations
  threading (safety, usability) in API and plugins
  smart cards, external keyring drives

* finish API:
  move secure memory C functions to qca_tools.h
  make public C functions to init in qca_tools.h, that qca_core will use
  cert/crl: Distinguished Names (Botan has X509_DN)
  cert: turn Info into an enum
  store: ability to combine stores, iterate over certs?
  openpgp: be sure to support key expiration and validity
  shortcuts for reading/writing certs, etc, directly to files?
  cert: version
  cert: extensions
  many functions that take provider names have an extra space at the end

* finish code for APIs:
  cipher - needs to handling padding
  mac
  pkey
  cert/crl/store (don't forget to call detach())
  tls
  sasl
  openpgp
  smime
  default provider should have built-in sha1 and md5 (?)
  system store: all added certs need to be flagged as trusted

* examples
  create example for Hex
  create example for Random
  create example for BigInteger
  update cipher example (after API sorted out)
  add systemStore() example

* write plugin support
  qca-tls: do something about the cert check lag.  maybe a thread?
  qca-botan: implement
  qca-egads (or qca-egd): implement for Random support
  qca-openssl: need to implement locking callbacks.
  figure out why Valgrind reports so many memory leaks

* consider new APIs:
  xmldsig
  xmlenc (sort of done already in cutestuff/xmlsec, but need to qca-ify)
  padding - a way to do any possible padding approach, so advanced users
            can turn off the default padding scheme, and pass in a 
            pre-padded last block.
  Key wrapping - RFC3217 and RFC3394
  Password based key derivation functions - RFC2898
  pkey: ability to choose cipher for toDER/PEM passphrase ?
    - botan doesn't seem to allow this, but kiko wanted it...
    - jack looking into it
  cert/csr/crl: path limit, subject/issuer ids (useful for create/validate)
  cert/csr: constraints, ex_constraints, policies (same as above)
  cert/csr: subjectAltName
  cert/pkey: fingerprints (is there a standard for this?)
  crl: issuer info, authority_key_id
  quoted-printable TextFilter?
  rsa: toSPKAC (kiko)
  tls: enable_session_cache = false (kiko)
  pgp: provide more key info (bits, trust values, photo)
  pgp: ability to manipulate keyrings? (create, add, delete, sign)
  personalbundle: cert chain vs cert + trusted certs?

* build system:
  on non-win/mac, allow specifying of flatfile store, else install/use built-in
  make sure it installs properly

* qt 4 upgrade:
  new include styles
  use qmake .prf for auto-discovery by applications
  use qplugin

