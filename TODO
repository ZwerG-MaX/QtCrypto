* Additional unit tests
* Bundle root certificates to be used on platforms without a system store
  (we need to choose a reliable source, maybe mozilla or debian?)

* API documentation
  clean up Algorithm
  clean up Filter
  add QCA::systemStore() and haveSystemStore()

* Considerations
  threading (safety, usability) in API and plugins
  smart cards, external keyring drives
  it's possible we use QSecureArray in some unnecessary places
  don't forget to QCA_EXPORT everything

* finish API:
  cert/crl: Distinguished Names (Botan has X509_DN)
  cert: turn Info into an enum
  cert: extensions
  cert fingerprints (sha1 and md5)
  cert/csr/crl: path limit, subject/issuer ids (useful for create/validate)
  cert/csr: constraints, ex_constraints, policies (same as above)
  cert/csr: subjectAltName
  crl: issuer info, authority_key_id
  tls: session reuse
  openpgp: be sure to support key expiration and validity
  shortcuts for reading/writing certs, etc, directly to files?
  quoted-printable TextFilter

* finish code for APIs:
  cipher - needs to handling padding
  mac
  pkey
  cert/crl/store/csr/ca/etc (don't forget to call detach())
  tls
  sasl
  openpgp
  smime
  default provider should have built-in sha1 and md5 (?)
  system store: all added certs need to be flagged as trusted

* build system:
  on non-win/mac, allow specifying of flatfile store, else install/use built-in
  make sure it installs properly

* qt 4 upgrade:
  new include styles
  use qmake .prf for auto-discovery by applications
  use qplugin

* examples
  create example for BigInteger
  update cipher example (after API sorted out)
  add systemStore() example

* write plugin support
  qca-tls: do something about the cert check lag.  maybe a thread?
  qca-botan: implement
  qca-egads (or qca-egd): implement for Random support
  qca-openssl: need to implement locking callbacks.
  figure out why Valgrind reports so many memory leaks

* possibilities for the future:
  xmldsig
  xmlenc (sort of done already in cutestuff/xmlsec, but need to qca-ify)
  advanced pgp functionality (full key info and ability to manipulate keyrings)
  Key wrapping - RFC3217 and RFC3394
  dtls (secure UDP)
  aes pbe algos

