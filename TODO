* Additional unit tests
* Update to latest Botan, and remake the botantools patch as appropriate
* create .prf for auto-discovery by qmake-based projects
* update the README

* API documentation
  clean up Algorithm
  clean up Filter
  document all the stuff in qca_cert.h
  document all the stuff in qca_securelayer.h
  document all the stuff in qca_securemessage.h
  think about documenting the various providers (qcaprovider.h)
  Change Doxyfile configuration to capture whole API, and to generate Latex manual.

* Considerations
  Q_DISABLE_COPY on some objects
  it's possible we use QSecureArray in some unnecessary places
  don't forget to QCA_EXPORT everything
  standardize on count() vs size() when iterating?
  add more "getters" to the library?
  give all classes non-default ctors/dtors/copy/op=, and dpointers?
  printf + latin1()/toLatin1() -> qPrintable() ? (in code, examples, docs, etc)

* for tech preview
  plugins:
    qca-openssl: cms verify/decrypt
    qca-gnupg: pgp key/sign/encrypt/verify/decrypt
  api:
    ensure PGPKey and SASL are proper
  other:
    fix the windows build

* finish code for APIs:
  securearray: operator+, operator+= (i think bytearray has these)
  "untrusted" error for SecureMessage
  waitFor() should just spin the event loop?
  if KeyStore::needPassphrase has no listener, submit a blank passphrase
  securelayer start() functions should return void
  functions that don't trip a scan should do so on the first try
  ability to disable CA mode in cert options?
  don't allow smart card providers to be used by default
  core: properties
  cert: rfc 2818 hostname validation
  keystore: cleanup
  sasl
  securemessage
  default provider: sha1
  fix default md5 provider - broken on big endian.

* examples
  create example for BigInteger
  fix SASL examples (client and server)
  fix SSL example

* write plugin support
  qca-botan: implement
  qca-egads (or qca-egd): implement for Random support

* possibilities for the future:
  Key wrapping - RFC3217 and RFC3394
  dtls (secure UDP)
  quoted-printable TextFilter
  providers for:
    Mozilla NSS
    Windows CryptoAPI
    Linux kernel crypto support, if the userspace API ever gets sorted out
    Intel Performance Primatives library

