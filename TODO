* Additional unit tests
* Update to latest Botan, and remake the botantools patch as appropriate
* create .prf for auto-discovery by qmake-based projects
* update the README

* API documentation
  clean up Algorithm
  clean up Filter
  document all the stuff in qca_cert.h
  document all the stuff in qca_securelayer.h
  document all the stuff in qca_securemessage.h
  think about documenting the various providers (qcaprovider.h)
  Change Doxyfile configuration to capture whole API, and to generate Latex manual.

* Considerations
  Q_DISABLE_COPY on some objects
  it's possible we use QSecureArray in some unnecessary places
  don't forget to QCA_EXPORT everything
  standardize on count() vs size() when iterating?
  add more "getters" to the library?
  give all classes non-default ctors/dtors/copy/op=, and dpointers?

* for tech preview
  plugins:
    qca-openssl: pix, cms verify/decrypt
    qca-gnupg: pgp key/sign/encrypt/verify/decrypt
  api:
    ensure PGPKey and SASL are proper
  other:
    QCA_EXPORT

* finish code for APIs:
  securelayer start() functions should return void
  functions that don't trip a scan should do so on the first try
  ability to disable CA mode in cert options?
  don't allow smart card providers to be used by default
  core: properties
  cert: rfc 2818 hostname validation
  keystore: cleanup
  sasl
  securemessage
  default provider: sha1
  fix default md5 provider - broken on big endian.

* examples
  create example for BigInteger
  fix SASL examples (client and server)
  fix SSL example

* write plugin support
  qca-tls: do something about the cert check lag.  maybe a thread?
  qca-botan: implement
  qca-egads (or qca-egd): implement for Random support
  qca-gnupg: NEED_PASSPHRASE_PIN, BAD_PASSPHRASE_PIN, etc

* possibilities for the future:
  Key wrapping - RFC3217 and RFC3394
  dtls (secure UDP)
  quoted-printable TextFilter
  provider for Mozilla NSS
  provider for Windows CryptoAPI
  provider for Linux kernel crypto support, if the userspace API ever gets sorted out
  provider for Intel Performance Primatives library

