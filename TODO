* Additional unit tests
* Update to latest Botan, and remake the botantools patch as appropriate
* create .prf for auto-discovery by qmake-based projects
* update the README

* API documentation
  clean up Algorithm
  clean up Filter
  document all the stuff in qca_cert.h
  document all the stuff in qca_securelayer.h
  document all the stuff in qca_securemessage.h
  think about documenting the various providers (qcaprovider.h)
  Change Doxyfile config to capture whole API, and to generate Latex manual.

* Considerations
  api:
    make sure there aren't any cases where a Foo::supportsBar()-style function
      reports true, but then when the object is created, it doesn't actually
      support the feature (because the wrong provider was used).
    Q_DISABLE_COPY on some objects
    give all classes non-default ctors/dtors/copy/op=, and dpointers?
    add more "getters" to the library?
    don't forget to QCA_EXPORT everything
    it's possible we use QSecureArray in some unnecessary places
  other:
    add asserts
    standardize on count() vs size() when iterating?
    printf + latin1()/toLatin1() -> qPrintable() ? (in code/examples/docs/etc)

* finish code for APIs:
  cert/key mismatch error for cms
  don't allow smart card providers to be used by default
  functions that don't trip a scan should do so on the first try
  proper parenting of all objects
  dirwatch: thread safety
  dirwatch: test on all platforms
  if KeyStore::needPassphrase has no listener, reject the request somehow
  qca-gnupg: ignore newlines from passphrase, to avoid advancing command-fd
  core: properties
  cert: rfc 2818 hostname validation
  keystore: cleanup
  securemessage
  tls
  sasl

* examples
  create example for BigInteger
  fix SASL examples (client and server)
  fix SSL example

* write plugin support
  qca-botan: implement
  qca-egads (or qca-egd): implement for Random support

* possibilities for the future:
  Key wrapping - RFC3217 and RFC3394
  quoted-printable TextFilter
  keygen on smart cards
  securemessage: cipher selection
  tls: SSL_get_client_CA_list (does anyone use this?)
  keystore: symmetric keys, arbitrary app data
  direct read/write of certificate extensions? (might need ASN.1 interface)
  providers for:
    Mozilla NSS
    Windows CryptoAPI
    Linux kernel crypto support, if the userspace API ever gets sorted out
    Intel Performance Primatives library

