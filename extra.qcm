/*
-----BEGIN QCMOD-----
name: extra
-----END QCMOD-----
*/

class qc_extra : public ConfObj
{
public:
	qc_extra(Conf *c) : ConfObj(c) {}
	QString name() const { return "extra"; }
	QString shortname() const { return "extra"; }

	// no output
	QString checkString() const { return QString(); }

	bool exec()
	{
		QString prefix = conf->getenv("PREFIX");

		QString str;
		QFile f;

		// write qmake-feature file
		str = QString(
		"CONFIG *= qt\n"
		"INCLUDEPATH += %1/include/QtCrypto\n").arg(prefix);
		str += QString(
		"LIBS += -L%1/lib -lqca\n").arg(prefix);

		f.setFileName("crypto.prf");
		if(f.open(QFile::WriteOnly | QFile::Truncate))
			f.write(str.toLatin1());
		f.close();

		str = QString(
		"prffiles.path = %1/mkspecs/features\n"
		"prffiles.files = crypto.prf\n"
		"INSTALLS += prffiles\n"
		).arg(QLibraryInfo::location(QLibraryInfo::DataPath));
		conf->addExtra(str);

		// write pkg-config file
		str = QString(
		"prefix=%1\n"
		"exec_prefix=${prefix}\n"
		"libdir=${prefix}/lib\n"
		"includedir=${prefix}/include/QtCrypto\n"
		"\n"
		"Name: QCA\n"
		"Description: Qt Cryptographic Architecture library\n"
		"Version: 2.0.0 #maybe this shouldn't be literal...\n"
		"Requires: qt-mt\n"
		"Libs: -L${libdir} -lqca\n"
		"Cflags: -I${includedir}\n"
		"\n"
		).arg(prefix);

		f.setFileName("qca.pc");
		if(f.open(QFile::WriteOnly | QFile::Truncate))
			f.write(str.toLatin1());
		f.close();

		return true;
	}
};
